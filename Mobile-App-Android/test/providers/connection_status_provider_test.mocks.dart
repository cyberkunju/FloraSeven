// Mocks generated by Mockito 5.4.6 from annotations
// in flora_seven/test/providers/connection_status_provider_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;
import 'dart:typed_data' as _i6;

import 'package:flora_seven/domain/models/plant_data.dart' as _i5;
import 'package:flora_seven/domain/models/pump_status.dart' as _i2;
import 'package:flora_seven/domain/models/thresholds.dart' as _i7;
import 'package:flora_seven/services/enhanced_api_service.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;
import 'package:mockito/src/dummies.dart' as _i8;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakePumpStatus_0 extends _i1.SmartFake implements _i2.PumpStatus {
  _FakePumpStatus_0(Object parent, Invocation parentInvocation)
    : super(parent, parentInvocation);
}

/// A class which mocks [EnhancedApiService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEnhancedApiService extends _i1.Mock
    implements _i3.EnhancedApiService {
  MockEnhancedApiService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> isServerAvailable() =>
      (super.noSuchMethod(
            Invocation.method(#isServerAvailable, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<Map<String, dynamic>?> getStatus() =>
      (super.noSuchMethod(
            Invocation.method(#getStatus, []),
            returnValue: _i4.Future<Map<String, dynamic>?>.value(),
          )
          as _i4.Future<Map<String, dynamic>?>);

  @override
  _i4.Future<_i5.PlantData?> getPlantData() =>
      (super.noSuchMethod(
            Invocation.method(#getPlantData, []),
            returnValue: _i4.Future<_i5.PlantData?>.value(),
          )
          as _i4.Future<_i5.PlantData?>);

  @override
  _i4.Future<_i6.Uint8List?> getLatestImage() =>
      (super.noSuchMethod(
            Invocation.method(#getLatestImage, []),
            returnValue: _i4.Future<_i6.Uint8List?>.value(),
          )
          as _i4.Future<_i6.Uint8List?>);

  @override
  _i4.Future<bool> uploadImage(_i6.Uint8List? imageBytes, String? filename) =>
      (super.noSuchMethod(
            Invocation.method(#uploadImage, [imageBytes, filename]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<_i7.Thresholds?> getThresholds() =>
      (super.noSuchMethod(
            Invocation.method(#getThresholds, []),
            returnValue: _i4.Future<_i7.Thresholds?>.value(),
          )
          as _i4.Future<_i7.Thresholds?>);

  @override
  _i4.Future<bool> updateThresholds(_i7.Thresholds? thresholds) =>
      (super.noSuchMethod(
            Invocation.method(#updateThresholds, [thresholds]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> sendWaterCommand({
    required bool? state,
    required int? durationSec,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendWaterCommand, [], {
              #state: state,
              #durationSec: durationSec,
            }),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> sendCaptureImageCommand({
    String? resolution = 'high',
    bool? flash = false,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#sendCaptureImageCommand, [], {
              #resolution: resolution,
              #flash: flash,
            }),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> sendReadNowCommand() =>
      (super.noSuchMethod(
            Invocation.method(#sendReadNowCommand, []),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<Map<String, dynamic>?> getHardwareStatus() =>
      (super.noSuchMethod(
            Invocation.method(#getHardwareStatus, []),
            returnValue: _i4.Future<Map<String, dynamic>?>.value(),
          )
          as _i4.Future<Map<String, dynamic>?>);

  @override
  bool isConnected() =>
      (super.noSuchMethod(
            Invocation.method(#isConnected, []),
            returnValue: false,
          )
          as bool);

  @override
  _i4.Future<bool> toggleAutoWatering(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#toggleAutoWatering, [enabled]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<List<Map<String, dynamic>>?> getHistoricalData({
    required String? startTime,
    required String? endTime,
    String? sensorType,
  }) =>
      (super.noSuchMethod(
            Invocation.method(#getHistoricalData, [], {
              #startTime: startTime,
              #endTime: endTime,
              #sensorType: sensorType,
            }),
            returnValue: _i4.Future<List<Map<String, dynamic>>?>.value(),
          )
          as _i4.Future<List<Map<String, dynamic>>?>);

  @override
  String getLatestImageUrl() =>
      (super.noSuchMethod(
            Invocation.method(#getLatestImageUrl, []),
            returnValue: _i8.dummyValue<String>(
              this,
              Invocation.method(#getLatestImageUrl, []),
            ),
          )
          as String);

  @override
  _i4.Future<bool> setAutoWatering(bool? enabled) =>
      (super.noSuchMethod(
            Invocation.method(#setAutoWatering, [enabled]),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<bool> waterPlant({int? durationSec = 5}) =>
      (super.noSuchMethod(
            Invocation.method(#waterPlant, [], {#durationSec: durationSec}),
            returnValue: _i4.Future<bool>.value(false),
          )
          as _i4.Future<bool>);

  @override
  _i4.Future<_i5.PlantData?> getLatestPlantData() =>
      (super.noSuchMethod(
            Invocation.method(#getLatestPlantData, []),
            returnValue: _i4.Future<_i5.PlantData?>.value(),
          )
          as _i4.Future<_i5.PlantData?>);

  @override
  _i4.Future<_i2.PumpStatus> startWatering({required int? duration}) =>
      (super.noSuchMethod(
            Invocation.method(#startWatering, [], {#duration: duration}),
            returnValue: _i4.Future<_i2.PumpStatus>.value(
              _FakePumpStatus_0(
                this,
                Invocation.method(#startWatering, [], {#duration: duration}),
              ),
            ),
          )
          as _i4.Future<_i2.PumpStatus>);

  @override
  _i4.Future<_i2.PumpStatus> stopWatering() =>
      (super.noSuchMethod(
            Invocation.method(#stopWatering, []),
            returnValue: _i4.Future<_i2.PumpStatus>.value(
              _FakePumpStatus_0(this, Invocation.method(#stopWatering, [])),
            ),
          )
          as _i4.Future<_i2.PumpStatus>);

  @override
  _i4.Future<_i2.PumpStatus> getPumpStatus() =>
      (super.noSuchMethod(
            Invocation.method(#getPumpStatus, []),
            returnValue: _i4.Future<_i2.PumpStatus>.value(
              _FakePumpStatus_0(this, Invocation.method(#getPumpStatus, [])),
            ),
          )
          as _i4.Future<_i2.PumpStatus>);

  @override
  _i4.Future<Map<String, dynamic>?> getConnectionStatus() =>
      (super.noSuchMethod(
            Invocation.method(#getConnectionStatus, []),
            returnValue: _i4.Future<Map<String, dynamic>?>.value(),
          )
          as _i4.Future<Map<String, dynamic>?>);
}
